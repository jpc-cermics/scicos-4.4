function [dt,data]=getscicosparam(fic)
// getscicosparam : read binary data in rdnom_params.dat
// file generated by Scicos CodeGeneration.
//
// input : fic : path+name of the data file
//
// output : dt : a list that encloses the name and the values
//          of the scicos variables enclosed in the parameters
//          file
//
//          data : a string matrix that gives the name, dimensions
//                 and type of Scicos variables enclosed in the
//                 parameters file.

   data = [];
   dt=[];
   
   if ~file('exists',fic) then
     error('File doesn''t exists.');
   end

   [path,fname,extension]=fileparts(fic)
   fic_xml=path+'/'+fname+'.xml';

   if ~file('exists',fic_xml) then
     error('Xml file doesn''t exists.');
   end

   txt = scicos_mgetl(fic_xml);
   data = m2s([]);

   for i=1:size(txt,1)
     if ~isempty(strindex(txt(i),'<ScicosVar')) then
       attr=["name=""";"dim1=""";"dim2=""";"typ=""";"/>"]
       n=size(attr,1); p=[];dt=m2s([]); Hin=hash(1);
       for j=1:n
         p=[p strindex(txt(i),attr(j))];
         if j>1 then
           dt=[dt part(txt(i),p(j-1):p(j)-1)]
           [ok,Hin]=execstr(dt($),env=Hin, errcatch=%t);
         end
       end
       data=[data;
             Hin.name Hin.dim1 Hin.dim2 Hin.typ]
     end
   end

   dt=tlist(['SicosParam',data(:,1)']);
   fd=fopen(fic,mode='rb');

   for i=1:size(data,1)
     sz=evstr(data(i,2))*evstr(data(i,3));
     select evstr(data(i,4))
       case 10 then typ='dl';
       case 11 then typ='dl',sz=sz*2;
       case 84 then typ='ll';
       case 82 then typ='sl';
       case 81 then typ='cl';
       case 814 then typ='ull';
       case 812 then typ='usl';
       case 811 then typ='ucl';
     end
     dt(data(i,1))=matrix(fd.get[n=sz,type=typ],evstr(data(i,2)),evstr(data(i,3)));
   end

   fd.close[];
endfunction
